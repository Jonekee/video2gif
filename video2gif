#!/usr/bin/env ruby
require 'rubygems'
require 'args_parser'
require 'fileutils'
require 'tmpdir'

parser = ArgsParser.parse ARGV do
  arg :input, 'input video file', :alias => :i
  arg :output, 'output gif file', :alias => :o, :default => 'out.gif'
  arg :size, 'size', :alias => :s, :default => '400x300'
  arg :tmp_dir, 'tmp dir', :default => '/var/tmp/video2gif'
  arg :video_fps, 'video fps', :alias => :vfps, :default => 30
  arg :gif_fps, 'gif fps', :alias => :gfps, :default => 30
  arg :max_frames, 'max frames', :default => -1
  arg :help, 'show help', :alias => :h
end

if parser.has_option? :help or !parser.has_param? :input
  puts parser.help
  puts 'e.g.  video2gif -i input.mov -o output.gif -vfps 2 -gfps 6 -s 200x150'
  exit
end

Dir.mktmpdir do |dir|

  puts cmd = "ffmpeg -i #{parser[:input]} -r #{parser[:video_fps]} -s #{parser[:size]} -sameq #{dir}/%d.gif"
  puts `#{cmd}`

  max_len = Dir.glob("#{dir}/*").map{|i|
    i.split('/').last.to_i
  }.max.to_s.size

  Dir.glob("#{dir}/*").each{|img|
    dst = File.dirname(img)+'/'+img.split('/').last.to_i.to_s.rjust(max_len,'0')+'.'+img.scan(/\.(.+)$/).first.first
    begin
      File.rename(img, dst)
    rescue => e
      STDERR.puts e
      exit 1
    end
  }

  if parser[:max_frames].to_i > 0
    files = Dir.glob("#{dir}/*").sort{|a,b|
      a.split('/').last.to_i <=> b.split('/').last.to_i
    }
    while files.size > parser[:max_frames].to_i
      File.delete files.shift
    end
  end

  puts cmd = "convert -colors 32 -resize #{parser[:size]} -loop 0 -delay #{100/parser[:gif_fps].to_i} #{dir}/*.gif #{parser[:output]}"
  puts `#{cmd}`
end
